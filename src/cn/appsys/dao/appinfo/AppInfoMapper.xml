<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.appsys.dao.appinfo.AppInfoMapper">

	<!-- int updataAppInfo(AppInfo appInfo); -->
	<update id="" parameterType="AppInfo">
		UPDATE app_info 
			SET
			<if test="softwareName">softwareName = #{softwareName}</if>
			<if test="supportROM">supportROM = #{supportROM}</if>
			<if test="interfaceLanguage">interfaceLanguage = #{interfaceLanguage}</if>
			<if test="softwareSize">softwareSize = #{softwareSize}</if>
			<if test="updateDate">updateDate = #{updateDate}</if>
			<if test="devId">devId = #{devId}</if>
			<if test="appInfo">appInfo = #{appInfo}</if>
			<if test="status">status = #{status}</if>
			<if test="onSaleDate">onSaleDate = #{onSaleDate}</if>
			<if test="offSaleDate">offSaleDate = #{offSaleDate}</if>
			<if test="flatformId">flatformId = #{flatformId}</if>
			<if test="categoryLevel3">categoryLevel3 = #{categoryLevel3}</if>
			<if test="downloads">downloads = #{downloads}</if>
			<if test="modifyBy">modifyBy = #{modifyBy}</if>
			<if test="modifyDate">modifyDate = #{modifyDate}</if>
			<if test="categoryLevel1">categoryLevel1 = #{categoryLevel1}</if>
			<if test="categoryLevel2">categoryLevel2 = #{categoryLevel2}</if>
			<if test="logoPicPath">logoPicPath = #{logoPicPath}</if>
			<if test="logoPicPath">logoPicPath = #{logoPicPath}</if>
			<if test="versionId">versionId = #{versionId}</if>
			<where>
				id = #{id}
			</where>
			
	</update>

	<!-- int updateLogoPicPath(@Param("id")Integer id); -->
	<update id="updateLogoPicPath" parameterType="int">
		update app_info 
			set 
				logoPicPath = null
				logoLocPath = null
				 	where id = #{id}
				
	</update>

	<!-- int getAppInfoAdd(AppInfo appInfo); -->
	<insert id="getAppInfoAdd" parameterType="AppInfo">
		insert into 
			app_info(softwareName,APKName,supportROM,interfaceLanguage,updateDate,softwareSize,
							devId,appInfo,status,onSaleDate,offSaleDate,categoryLevel1,categoryLevel2,
							categoryLevel3,downloads,flatformId,logoPicPath,logoLocPath,createdBy,creationDate)
				value(#{softwareName},#{APKName},#{supportROM},#{interfaceLanguage},#{updateDate},
					   #{softwareSize},#{devId},#{appInfo},#{status},#{onSaleDate},#{offSaleDate},
					   #{categoryLevel1},#{categoryLevel2},#{categoryLevel3},#{downloads},
					   #{flatformId},#{logoPicPath},#{logoLocPath},#{createdBy},#{creationDate})
	</insert>

	<!-- AppInfo getAppInfoByAPKName(@Param("APKName")String APKName); -->
	<select id="getAppInfoByAPKName" resultType="AppInfo">
		select 
			 
			i.id,i.softwareName,i.APKName,i.supportROM,i.interfaceLanguage,
			i.softwareSize,i.updateDate,i.devId,i.appInfo,i.onSaleDate,i.offSaleDate,
			i.downloads,i.createdBy,i.creationDate,i.modifyBy,i.modifyDate,i.logoPicPath,i.logoLocPath,
			i.status,(select d.valueName from data_dictionary d where d.valueId=i.status and typeCode='APP_STATUS') as statusName,
			i.flatformId,(select d.valueName from data_dictionary d where d.valueId=i.flatformId and typeCode='APP_FLATFORM') as flatformName,
			i.versionId,(select v.versionNo from app_version v where v.id=i.versionId) as versionNo,
			i.categoryLevel1,(select c.categoryName from app_category c where c.id=i.categoryLevel1) as categoryLevel1Name,
			i.categoryLevel2,(select c.categoryName from app_category c where c.id=i.categoryLevel2) as categoryLevel2Name,
			i.categoryLevel3,(select c.categoryName from app_category c where c.id=i.categoryLevel3) as categoryLevel3Name
				from app_info i
					where i.APKName=#{APKName}
	</select>
	
	<!-- int appInfoModify(AppInfo appInfo); -->
	<update id="appInfoModify" parameterType="AppInfo">
		update app_info
			<trim prefix="set" suffix="where id = #{id}" suffixOverrides=",">
				<if test="softwareName != null">
					softwareName = #{softwareName},
				</if>
				<if test="APKName != null">
					APKName = #{APKName},
				</if>
				<if test="supportROM != null">
					supportROM = #{supportROM},
				</if>
				<if test="interfaceLanguage != null">
					interfaceLanguage = #{interfaceLanguage},
				</if>
				<if test="softwareSize != null">
					softwareSize = #{softwareSize},
				</if>
				<if test="downloads != null">
					downloads =#{downloads},
				</if>
				<if test="flatformId != null">
					flatformId =#{flatformId},
				</if>
				<if test="categoryLevel1 != null">
					categoryLevel1 =#{categoryLevel1},
				</if>
				<if test="categoryLevel2 != null">
					categoryLevel2 =#{categoryLevel2},
				</if>
				<if test="categoryLevel3 != null">
					categoryLevel3 =#{categoryLevel3},
				</if>
				<if test="status != null">
					status = #{status},
				</if>
				<if test="appInfo != null">
					appInfo =#{appInfo},
				</if>
				<if test="logoPicPath != null">
					logoPicPath =#{logoPicPath},
				</if>
				<if test="logoLocPath != null">
					logoLocPath =#{logoLocPath}
				</if>
			</trim> 
	</update>
	
	<!-- int dealpp(@Param("id") Integer id); -->
	<delete id="dealpp">
		DELETE FROM app_info 
			WHERE id = #{id}
	</delete>

	<!-- AppInfo getAppInfoById(@Param("appinfoid")Integer appinfoid); -->
 	<select id="getAppInfoById" resultType="AppInfo">
 		select 
			i.id,i.softwareName,i.APKName,i.supportROM,i.interfaceLanguage,i.softwareSize,
			i.updateDate,i.devId,i.appInfo,i.onSaleDate,i.offSaleDate,i.downloads,i.createdBy,i.creationDate,
			i.modifyBy,i.modifyDate,i.logoPicPath,logoLocPath,
			i.status,(select d.valueName from data_dictionary d where d.valueId = i.status and d.typeCode = 'APP_STATUS') as statusName,
			i.flatformId,(select d.valueName from data_dictionary d where d.valueId = i.flatformId and d.typeCode = 'APP_FLATFORM') as flatformName,
			i.versionId,(select v.versionNo from app_version v where v.id = i.versionId) as versionNo,
			i.categoryLevel1,(select c.categoryName from app_category c where c.id = i.categoryLevel1) as categoryLevel1Name,
			i.categoryLevel2,(select c.categoryName from app_category c where c.id = i.categoryLevel2) as categoryLevel2Name,
			i.categoryLevel3,(select c.categoryName from app_category c where c.id = i.categoryLevel3) as categoryLevel3Name
				from app_info i
				where i.id = #{appinfoid}
 	</select>
 	
 	
 	<!-- int getAppInfoCount(QueryAppInfoVO queryAppInfoVO); -->
 	<select id="getAppInfoCount" resultType="_int" parameterType="QueryAppInfoVO">
 		select count(1)
			from app_info
				<where>
					<if test="querySoftwareName != null and querySoftwareName !='' ">
						and softwareName like CONCAT('%',#{querySoftwareName},'%')
					</if>
					<if test="queryStatus != null">
						and status = #{queryStatus}
					</if>
					<if test="queryFlatformId != null">
						and flatFormId = #{queryFlatformId}
					</if>
					<if test="queryCategoryLevel1 != null">
						and categoryLevel1 = #{queryCategoryLevel1}
					</if>
					<if test="queryCategoryLevel2 != null">
						and categoryLevel2 = #{queryCategoryLevel2}
					</if>
					<if test="queryCategoryLevel3 != null">
						and categoryLevel3 = #{queryCategoryLevel3}
					</if>
				</where>
 	</select>
 	
 	<!-- List<AppInfo> getAppInfoList(QueryAppInfoVO queryAppInfoVO); -->
 	<select id="getAppInfoList" resultType="AppInfo" parameterType="QueryAppInfoVO">
 		select 
			i.id,i.softwareName,i.APKName,i.supportROM,i.interfaceLanguage,i.softwareSize,
			i.updateDate,i.devId,i.appInfo,i.onSaleDate,i.offSaleDate,i.downloads,i.createdBy,i.creationDate,
			i.modifyBy,i.modifyDate,i.logoPicPath,logoLocPath,
			i.status,(select d.valueName from data_dictionary d where d.valueId = i.status and d.typeCode = 'APP_STATUS') as statusName,
			i.flatformId,(select d.valueName from data_dictionary d where d.valueId = i.flatformId and d.typeCode = 'APP_FLATFORM') as flatformName,
			i.versionId,(select v.versionNo from app_version v where v.id = i.versionId) as versionNo,
			i.categoryLevel1,(select c.categoryName from app_category c where c.id = i.categoryLevel1) as categoryLevel1Name,
			i.categoryLevel2,(select c.categoryName from app_category c where c.id = i.categoryLevel2) as categoryLevel2Name,
			i.categoryLevel3,(select c.categoryName from app_category c where c.id = i.categoryLevel3) as categoryLevel3Name
				from app_info i
					<where>
						<if test="querySoftwareName != null and querySoftwareName !='' ">
							and softwareName like CONCAT('%',#{querySoftwareName},'%')
						</if>
						<if test="queryStatus != null">
							and status = #{queryStatus}
						</if>
						<if test="queryFlatformId != null">
							and flatFormId = #{queryFlatformId}
						</if>
						<if test="queryCategoryLevel1 != null">
							and categoryLevel1 = #{queryCategoryLevel1}
						</if>
						<if test="queryCategoryLevel2 != null">
							and categoryLevel2 = #{queryCategoryLevel2}
						</if>
						<if test="queryCategoryLevel3 != null">
							and categoryLevel3 = #{queryCategoryLevel3}
						</if>
					</where>
					order by i.creationDate DESC,i.modifyDate DESC
						limit #{startIndex},#{pageSize}
 		
 	</select>
 	
</mapper>
